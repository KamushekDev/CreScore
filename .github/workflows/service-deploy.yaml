name: Service - Deploy
on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to be deployed'
        required: true
        type: choice
        options:
        - uniscore-auth
        - uniscore-scores
        - uniscore-users
        - uniscore-placeholder
      environment:
        description: 'Environment to be deployed on'
        required: true
        type: choice
        options:
        - production
        - staging
jobs:
  deploy-prep:
    runs-on: ubuntu-latest
    steps:
      - name: React build
        uses: ./.github/workflows/react-${{ inputs.service }}.yaml
        if: ${{ inputs.service }} == 'uniscore-placeholder
        secrets: inherit
      - name Dotnet build
        uses: ./.github/workflows/dotnet-${{ inputs.service }}.yaml
        if: ${{ inputs.service }} != 'uniscore-placeholder
        secrets: inherit
  deploy:
    needs: deploy-prep
    runs-on: ubuntu-latest
    env:
      ConfigFileDir: "configs"
      OvpnConfigFile: "config.ovpn"
      KubeCtlConfigFile: "kubeConfig"
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: OpenVpn setup
        uses: ./.github/actions/deploy/openVpn-setup
        with: 
          openVpnConfig: ${{ secrets.VPN_CONFIG }}
          openVpnUserName: ${{ secrets.VPN_USERNAME }}
          openVpnUserPassword: ${{ secrets.VPN_PASSWORD }}
      - name: Kubectl setup
        uses: Azure/setup-kubectl@v3
      - name: Setup kubectl config
        uses: ./.github/actions/deploy/kubectl-setup
        with: 
          kubeConfig: ${{ secrets.KUBE_CONFIG }}
      - name: Deploy service
        uses: ./.github/actions/deploy/deploy-resources
        with: 
          environment: ${{ inputs.environment }}
          resourcePath: "services/${{ inputs.service }}"
      - name: Restart service
        run: |
          kubectl rollout restart -f ./k8s/base/services/${{ needs.deploy-prep.outputs.project_name }}/deployment.yaml
    
